/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.api;

import cisco.com.dnac.v1.api.client.ApiException;
import cisco.com.dnac.v1.api.client.model.SiteResult;
import cisco.com.dnac.v1.api.client.model.TopologyResult;
import cisco.com.dnac.v1.api.client.model.VlanNamesResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TopologyApi
 */
@Ignore
public class TopologyApiTest {

    private final TopologyApi api = new TopologyApi();

    
    /**
     * getL2Topology
     *
     * This method is used to obtain the Layer 2 topology by Vlan ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTopologyL2ByVlanIdTest() throws ApiException {
        String vlanID = null;
        TopologyResult response = api.getTopologyL2ByVlanId(vlanID);

        // TODO: test validations
    }
    
    /**
     * getL3Topology
     *
     * This method is used to obtain Layer 3 device topology by routing protocol type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTopologyL3ByTopologyTypeTest() throws ApiException {
        String topologyType = null;
        TopologyResult response = api.getTopologyL3ByTopologyType(topologyType);

        // TODO: test validations
    }
    
    /**
     * getPhysicalTopology
     *
     * This method is used to obtain the raw physical topology and filter based on nodeType
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTopologyPhysicalTopologyTest() throws ApiException {
        String nodeType = null;
        TopologyResult response = api.getTopologyPhysicalTopology(nodeType);

        // TODO: test validations
    }
    
    /**
     * getSiteTopology
     *
     * This method is used to obtain the site topology
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTopologySiteTopologyTest() throws ApiException {
        SiteResult response = api.getTopologySiteTopology();

        // TODO: test validations
    }
    
    /**
     * getVlanNames
     *
     * This method is used to obtain the list of vlan names
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTopologyVlanVlanNamesTest() throws ApiException {
        VlanNamesResult response = api.getTopologyVlanVlanNames();

        // TODO: test validations
    }
    
}
