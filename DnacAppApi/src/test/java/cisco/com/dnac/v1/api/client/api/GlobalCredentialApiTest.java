/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.api;

import cisco.com.dnac.v1.api.client.ApiException;
import cisco.com.dnac.v1.api.client.model.CLICredentialDTO;
import cisco.com.dnac.v1.api.client.model.GlobalCredentialListResult;
import cisco.com.dnac.v1.api.client.model.GlobalCredentialSubTypeResult;
import cisco.com.dnac.v1.api.client.model.HTTPReadCredentialDTO;
import cisco.com.dnac.v1.api.client.model.HTTPWriteCredentialDTO;
import cisco.com.dnac.v1.api.client.model.NetconfCredentialDTO;
import cisco.com.dnac.v1.api.client.model.SNMPvCredentialDTO;
import cisco.com.dnac.v1.api.client.model.SNMPvReadCommunityDTO;
import cisco.com.dnac.v1.api.client.model.SNMPvWriteCommunityDTO;
import cisco.com.dnac.v1.api.client.model.SitesInfoDTO;
import cisco.com.dnac.v1.api.client.model.TaskIdResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GlobalCredentialApi
 */
@Ignore
public class GlobalCredentialApiTest {

    private final GlobalCredentialApi api = new GlobalCredentialApi();

    
    /**
     * Retrieves global credential by ID
     *
     * This method is used to delete global credential for the given ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGlobalCredentialByGlobalCredentialIdTest() throws ApiException {
        String globalCredentialId = null;
        TaskIdResult response = api.deleteGlobalCredentialByGlobalCredentialId(globalCredentialId);

        // TODO: test validations
    }
    
    /**
     * Retrieves global credential for the given credential sub type
     *
     * This method is used to get global credential for the given credential sub type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalCredentialTest() throws ApiException {
        String credentialSubType = null;
        String sortBy = null;
        String order = null;
        GlobalCredentialListResult response = api.getGlobalCredential(credentialSubType, sortBy, order);

        // TODO: test validations
    }
    
    /**
     * Retrieves credential sub type for the given credential Id
     *
     * This method is used to get credential sub type for the given Id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalCredentialByIdTest() throws ApiException {
        String id = null;
        GlobalCredentialSubTypeResult response = api.getGlobalCredentialById(id);

        // TODO: test validations
    }
    
    /**
     * Creates global CLI credential
     *
     * This method is used to add global CLI credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlobalCredentialCliTest() throws ApiException {
        CLICredentialDTO request = null;
        TaskIdResult response = api.postGlobalCredentialCli(request);

        // TODO: test validations
    }
    
    /**
     * Creates global HTTP read credentials
     *
     * This method is used to add HTTP read credentials
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlobalCredentialHttpReadTest() throws ApiException {
        HTTPReadCredentialDTO request = null;
        TaskIdResult response = api.postGlobalCredentialHttpRead(request);

        // TODO: test validations
    }
    
    /**
     * Creates global HTTP write credentials
     *
     * This method is used to add global HTTP write credentials
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlobalCredentialHttpWriteTest() throws ApiException {
        HTTPWriteCredentialDTO request = null;
        TaskIdResult response = api.postGlobalCredentialHttpWrite(request);

        // TODO: test validations
    }
    
    /**
     * Creates global netconf credential
     *
     * This method is used to add global netconf credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlobalCredentialNetconfTest() throws ApiException {
        NetconfCredentialDTO request = null;
        TaskIdResult response = api.postGlobalCredentialNetconf(request);

        // TODO: test validations
    }
    
    /**
     * Creates global SNMP read community
     *
     * This method is used to add global SNMP read community
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlobalCredentialSnmpv2ReadCommunityTest() throws ApiException {
        SNMPvReadCommunityDTO request = null;
        TaskIdResult response = api.postGlobalCredentialSnmpv2ReadCommunity(request);

        // TODO: test validations
    }
    
    /**
     * Creates global SNMP write community
     *
     * This method is used to add global SNMP write community
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlobalCredentialSnmpv2WriteCommunityTest() throws ApiException {
        SNMPvWriteCommunityDTO request = null;
        TaskIdResult response = api.postGlobalCredentialSnmpv2WriteCommunity(request);

        // TODO: test validations
    }
    
    /**
     * Creates global SNMPv3 credential
     *
     * This method is used to add global SNMPv3 credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlobalCredentialSnmpv3Test() throws ApiException {
        SNMPvCredentialDTO request = null;
        TaskIdResult response = api.postGlobalCredentialSnmpv3(request);

        // TODO: test validations
    }
    
    /**
     * Update global credential for network devices in site(s)
     *
     * Update global credential for network devices in site(s)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialByGlobalCredentialIdTest() throws ApiException {
        SitesInfoDTO request = null;
        String globalCredentialId = null;
        TaskIdResult response = api.putGlobalCredentialByGlobalCredentialId(request, globalCredentialId);

        // TODO: test validations
    }
    
    /**
     * Updates global CLI credential
     *
     * This method is used to update global CLI credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialCliTest() throws ApiException {
        CLICredentialDTO request = null;
        TaskIdResult response = api.putGlobalCredentialCli(request);

        // TODO: test validations
    }
    
    /**
     * Updates global HTTP Read credential
     *
     * This method is used to update global HTTP Read credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialHttpReadTest() throws ApiException {
        HTTPReadCredentialDTO request = null;
        TaskIdResult response = api.putGlobalCredentialHttpRead(request);

        // TODO: test validations
    }
    
    /**
     * Updates global HTTP Write credential
     *
     * This method is used to update global HTTP Write credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialHttpWriteTest() throws ApiException {
        HTTPWriteCredentialDTO request = null;
        TaskIdResult response = api.putGlobalCredentialHttpWrite(request);

        // TODO: test validations
    }
    
    /**
     * Updates global netconf credential
     *
     * This method is used to update global netconf credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialNetconfTest() throws ApiException {
        NetconfCredentialDTO request = null;
        TaskIdResult response = api.putGlobalCredentialNetconf(request);

        // TODO: test validations
    }
    
    /**
     * Updates global SNMP read community
     *
     * This method is used to update global SNMP read community
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialSnmpv2ReadCommunityTest() throws ApiException {
        SNMPvReadCommunityDTO request = null;
        TaskIdResult response = api.putGlobalCredentialSnmpv2ReadCommunity(request);

        // TODO: test validations
    }
    
    /**
     * Updates global SNMP write community
     *
     * This method is used to update global SNMP write community
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialSnmpv2WriteCommunityTest() throws ApiException {
        SNMPvWriteCommunityDTO request = null;
        TaskIdResult response = api.putGlobalCredentialSnmpv2WriteCommunity(request);

        // TODO: test validations
    }
    
    /**
     * Updates global SNMPv3 credential
     *
     * This method is used to update global SNMPv3 credential
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putGlobalCredentialSnmpv3Test() throws ApiException {
        SNMPvCredentialDTO request = null;
        TaskIdResult response = api.putGlobalCredentialSnmpv3(request);

        // TODO: test validations
    }
    
}
