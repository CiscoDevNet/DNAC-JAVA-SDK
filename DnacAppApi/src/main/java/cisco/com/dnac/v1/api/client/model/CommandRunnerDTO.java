/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CommandRunnerDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class CommandRunnerDTO {
  @SerializedName("commands")
  private List<String> commands = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("deviceUuids")
  private List<String> deviceUuids = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("timeout")
  private Integer timeout = null;

  public CommandRunnerDTO commands(List<String> commands) {
    this.commands = commands;
    return this;
  }

  public CommandRunnerDTO addCommandsItem(String commandsItem) {
    if (this.commands == null) {
      this.commands = new ArrayList<>();
    }
    this.commands.add(commandsItem);
    return this;
  }

   /**
   * Get commands
   * @return commands
  **/
  @ApiModelProperty(value = "")
  public List<String> getCommands() {
    return commands;
  }

  public void setCommands(List<String> commands) {
    this.commands = commands;
  }

  public CommandRunnerDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CommandRunnerDTO deviceUuids(List<String> deviceUuids) {
    this.deviceUuids = deviceUuids;
    return this;
  }

  public CommandRunnerDTO addDeviceUuidsItem(String deviceUuidsItem) {
    if (this.deviceUuids == null) {
      this.deviceUuids = new ArrayList<>();
    }
    this.deviceUuids.add(deviceUuidsItem);
    return this;
  }

   /**
   * Get deviceUuids
   * @return deviceUuids
  **/
  @ApiModelProperty(value = "")
  public List<String> getDeviceUuids() {
    return deviceUuids;
  }

  public void setDeviceUuids(List<String> deviceUuids) {
    this.deviceUuids = deviceUuids;
  }

  public CommandRunnerDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CommandRunnerDTO timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @ApiModelProperty(value = "")
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandRunnerDTO commandRunnerDTO = (CommandRunnerDTO) o;
    return Objects.equals(this.commands, commandRunnerDTO.commands) &&
        Objects.equals(this.description, commandRunnerDTO.description) &&
        Objects.equals(this.deviceUuids, commandRunnerDTO.deviceUuids) &&
        Objects.equals(this.name, commandRunnerDTO.name) &&
        Objects.equals(this.timeout, commandRunnerDTO.timeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commands, description, deviceUuids, name, timeout);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandRunnerDTO {\n");
    
    sb.append("    commands: ").append(toIndentedString(commands)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deviceUuids: ").append(toIndentedString(deviceUuids)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

