/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoAaaCredentials;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoFileSystemList;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoIpInterfaces;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoLocation;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoNeighborLinks;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoPnpProfileList;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoPreWorkflowCliOuputs;
import cisco.com.dnac.v1.api.client.model.DeviceInnerDeviceInfoStackInfo;
import cisco.com.dnac.v1.api.client.model.ResetRequestConfigParameters;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DeviceInnerDeviceInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class DeviceInnerDeviceInfo {
  @SerializedName("aaaCredentials")
  private DeviceInnerDeviceInfoAaaCredentials aaaCredentials = null;

  @SerializedName("addedOn")
  private Integer addedOn = null;

  @SerializedName("addnMacAddrs")
  private List<String> addnMacAddrs = null;

  /**
   * Gets or Sets agentType
   */
  @JsonAdapter(AgentTypeEnum.Adapter.class)
  public enum AgentTypeEnum {
    POSIX("POSIX"),
    
    IOS("IOS");

    private String value;

    AgentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AgentTypeEnum fromValue(String text) {
      for (AgentTypeEnum b : AgentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AgentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AgentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AgentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AgentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("agentType")
  private AgentTypeEnum agentType = null;

  @SerializedName("authStatus")
  private String authStatus = null;

  @SerializedName("authenticatedSudiSerialNo")
  private String authenticatedSudiSerialNo = null;

  @SerializedName("capabilitiesSupported")
  private List<String> capabilitiesSupported = null;

  /**
   * Gets or Sets cmState
   */
  @JsonAdapter(CmStateEnum.Adapter.class)
  public enum CmStateEnum {
    NOTCONTACTED("NotContacted"),
    
    CONTACTED("Contacted"),
    
    DISCONNECTED("Disconnected"),
    
    SECURINGCONNECTION("SecuringConnection"),
    
    SECUREDCONNECTION("SecuredConnection"),
    
    AUTHENTICATED("Authenticated"),
    
    ERRORSECURINGCONNECTION("ErrorSecuringConnection"),
    
    ERRORAUTHENTICATING("ErrorAuthenticating");

    private String value;

    CmStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CmStateEnum fromValue(String text) {
      for (CmStateEnum b : CmStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CmStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CmStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CmStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CmStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("cmState")
  private CmStateEnum cmState = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("deviceSudiSerialNos")
  private List<String> deviceSudiSerialNos = null;

  @SerializedName("deviceType")
  private String deviceType = null;

  @SerializedName("featuresSupported")
  private List<String> featuresSupported = null;

  @SerializedName("fileSystemList")
  private List<DeviceInnerDeviceInfoFileSystemList> fileSystemList = null;

  @SerializedName("firstContact")
  private Integer firstContact = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("httpHeaders")
  private List<ResetRequestConfigParameters> httpHeaders = null;

  @SerializedName("imageFile")
  private String imageFile = null;

  @SerializedName("imageVersion")
  private String imageVersion = null;

  @SerializedName("ipInterfaces")
  private List<DeviceInnerDeviceInfoIpInterfaces> ipInterfaces = null;

  @SerializedName("lastContact")
  private Integer lastContact = null;

  @SerializedName("lastSyncTime")
  private Integer lastSyncTime = null;

  @SerializedName("lastUpdateOn")
  private Integer lastUpdateOn = null;

  @SerializedName("location")
  private DeviceInnerDeviceInfoLocation location = null;

  @SerializedName("macAddress")
  private String macAddress = null;

  @SerializedName("mode")
  private String mode = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("neighborLinks")
  private List<DeviceInnerDeviceInfoNeighborLinks> neighborLinks = null;

  /**
   * Gets or Sets onbState
   */
  @JsonAdapter(OnbStateEnum.Adapter.class)
  public enum OnbStateEnum {
    NOTCONTACTED("NotContacted"),
    
    CONNECTING("Connecting"),
    
    ERRORSECURINGCONNECTION("ErrorSecuringConnection"),
    
    ERRORAUTHENTICATING("ErrorAuthenticating"),
    
    INITIALIZING("Initializing"),
    
    INITIALIZED("Initialized"),
    
    ERRORINITIALIZING("ErrorInitializing"),
    
    ERRORSUDIAUTHORIZING("ErrorSudiAuthorizing"),
    
    EXECUTINGWORKFLOW("ExecutingWorkflow"),
    
    EXECUTEDWORKFLOW("ExecutedWorkflow"),
    
    ERROREXECUTINGWORKFLOW("ErrorExecutingWorkflow"),
    
    EXECUTINGRESET("ExecutingReset"),
    
    ERROREXECUTINGRESET("ErrorExecutingReset"),
    
    PROVISIONED("Provisioned");

    private String value;

    OnbStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OnbStateEnum fromValue(String text) {
      for (OnbStateEnum b : OnbStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OnbStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OnbStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OnbStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OnbStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("onbState")
  private OnbStateEnum onbState = null;

  @SerializedName("pid")
  private String pid = null;

  @SerializedName("pnpProfileList")
  private List<DeviceInnerDeviceInfoPnpProfileList> pnpProfileList = null;

  @SerializedName("preWorkflowCliOuputs")
  private List<DeviceInnerDeviceInfoPreWorkflowCliOuputs> preWorkflowCliOuputs = null;

  @SerializedName("projectId")
  private String projectId = null;

  @SerializedName("projectName")
  private String projectName = null;

  @SerializedName("reloadRequested")
  private Boolean reloadRequested = null;

  @SerializedName("serialNumber")
  private String serialNumber = null;

  @SerializedName("smartAccountId")
  private String smartAccountId = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("stack")
  private Boolean stack = null;

  @SerializedName("stackInfo")
  private DeviceInnerDeviceInfoStackInfo stackInfo = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNCLAIMED("Unclaimed"),
    
    PLANNED("Planned"),
    
    ONBOARDING("Onboarding"),
    
    PROVISIONED("Provisioned"),
    
    ERROR("Error"),
    
    DELETED("Deleted");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("sudiRequired")
  private Boolean sudiRequired = null;

  @SerializedName("tags")
  private Object tags = null;

  @SerializedName("userSudiSerialNos")
  private List<String> userSudiSerialNos = null;

  @SerializedName("virtualAccountId")
  private String virtualAccountId = null;

  @SerializedName("workflowId")
  private String workflowId = null;

  @SerializedName("workflowName")
  private String workflowName = null;

  public DeviceInnerDeviceInfo aaaCredentials(DeviceInnerDeviceInfoAaaCredentials aaaCredentials) {
    this.aaaCredentials = aaaCredentials;
    return this;
  }

   /**
   * Get aaaCredentials
   * @return aaaCredentials
  **/
  @ApiModelProperty(value = "")
  public DeviceInnerDeviceInfoAaaCredentials getAaaCredentials() {
    return aaaCredentials;
  }

  public void setAaaCredentials(DeviceInnerDeviceInfoAaaCredentials aaaCredentials) {
    this.aaaCredentials = aaaCredentials;
  }

  public DeviceInnerDeviceInfo addedOn(Integer addedOn) {
    this.addedOn = addedOn;
    return this;
  }

   /**
   * Get addedOn
   * @return addedOn
  **/
  @ApiModelProperty(value = "")
  public Integer getAddedOn() {
    return addedOn;
  }

  public void setAddedOn(Integer addedOn) {
    this.addedOn = addedOn;
  }

  public DeviceInnerDeviceInfo addnMacAddrs(List<String> addnMacAddrs) {
    this.addnMacAddrs = addnMacAddrs;
    return this;
  }

  public DeviceInnerDeviceInfo addAddnMacAddrsItem(String addnMacAddrsItem) {
    if (this.addnMacAddrs == null) {
      this.addnMacAddrs = new ArrayList<>();
    }
    this.addnMacAddrs.add(addnMacAddrsItem);
    return this;
  }

   /**
   * Get addnMacAddrs
   * @return addnMacAddrs
  **/
  @ApiModelProperty(value = "")
  public List<String> getAddnMacAddrs() {
    return addnMacAddrs;
  }

  public void setAddnMacAddrs(List<String> addnMacAddrs) {
    this.addnMacAddrs = addnMacAddrs;
  }

  public DeviceInnerDeviceInfo agentType(AgentTypeEnum agentType) {
    this.agentType = agentType;
    return this;
  }

   /**
   * Get agentType
   * @return agentType
  **/
  @ApiModelProperty(value = "")
  public AgentTypeEnum getAgentType() {
    return agentType;
  }

  public void setAgentType(AgentTypeEnum agentType) {
    this.agentType = agentType;
  }

  public DeviceInnerDeviceInfo authStatus(String authStatus) {
    this.authStatus = authStatus;
    return this;
  }

   /**
   * Get authStatus
   * @return authStatus
  **/
  @ApiModelProperty(value = "")
  public String getAuthStatus() {
    return authStatus;
  }

  public void setAuthStatus(String authStatus) {
    this.authStatus = authStatus;
  }

  public DeviceInnerDeviceInfo authenticatedSudiSerialNo(String authenticatedSudiSerialNo) {
    this.authenticatedSudiSerialNo = authenticatedSudiSerialNo;
    return this;
  }

   /**
   * Get authenticatedSudiSerialNo
   * @return authenticatedSudiSerialNo
  **/
  @ApiModelProperty(value = "")
  public String getAuthenticatedSudiSerialNo() {
    return authenticatedSudiSerialNo;
  }

  public void setAuthenticatedSudiSerialNo(String authenticatedSudiSerialNo) {
    this.authenticatedSudiSerialNo = authenticatedSudiSerialNo;
  }

  public DeviceInnerDeviceInfo capabilitiesSupported(List<String> capabilitiesSupported) {
    this.capabilitiesSupported = capabilitiesSupported;
    return this;
  }

  public DeviceInnerDeviceInfo addCapabilitiesSupportedItem(String capabilitiesSupportedItem) {
    if (this.capabilitiesSupported == null) {
      this.capabilitiesSupported = new ArrayList<>();
    }
    this.capabilitiesSupported.add(capabilitiesSupportedItem);
    return this;
  }

   /**
   * Get capabilitiesSupported
   * @return capabilitiesSupported
  **/
  @ApiModelProperty(value = "")
  public List<String> getCapabilitiesSupported() {
    return capabilitiesSupported;
  }

  public void setCapabilitiesSupported(List<String> capabilitiesSupported) {
    this.capabilitiesSupported = capabilitiesSupported;
  }

  public DeviceInnerDeviceInfo cmState(CmStateEnum cmState) {
    this.cmState = cmState;
    return this;
  }

   /**
   * Get cmState
   * @return cmState
  **/
  @ApiModelProperty(value = "")
  public CmStateEnum getCmState() {
    return cmState;
  }

  public void setCmState(CmStateEnum cmState) {
    this.cmState = cmState;
  }

  public DeviceInnerDeviceInfo description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DeviceInnerDeviceInfo deviceSudiSerialNos(List<String> deviceSudiSerialNos) {
    this.deviceSudiSerialNos = deviceSudiSerialNos;
    return this;
  }

  public DeviceInnerDeviceInfo addDeviceSudiSerialNosItem(String deviceSudiSerialNosItem) {
    if (this.deviceSudiSerialNos == null) {
      this.deviceSudiSerialNos = new ArrayList<>();
    }
    this.deviceSudiSerialNos.add(deviceSudiSerialNosItem);
    return this;
  }

   /**
   * Get deviceSudiSerialNos
   * @return deviceSudiSerialNos
  **/
  @ApiModelProperty(value = "")
  public List<String> getDeviceSudiSerialNos() {
    return deviceSudiSerialNos;
  }

  public void setDeviceSudiSerialNos(List<String> deviceSudiSerialNos) {
    this.deviceSudiSerialNos = deviceSudiSerialNos;
  }

  public DeviceInnerDeviceInfo deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Get deviceType
   * @return deviceType
  **/
  @ApiModelProperty(value = "")
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  public DeviceInnerDeviceInfo featuresSupported(List<String> featuresSupported) {
    this.featuresSupported = featuresSupported;
    return this;
  }

  public DeviceInnerDeviceInfo addFeaturesSupportedItem(String featuresSupportedItem) {
    if (this.featuresSupported == null) {
      this.featuresSupported = new ArrayList<>();
    }
    this.featuresSupported.add(featuresSupportedItem);
    return this;
  }

   /**
   * Get featuresSupported
   * @return featuresSupported
  **/
  @ApiModelProperty(value = "")
  public List<String> getFeaturesSupported() {
    return featuresSupported;
  }

  public void setFeaturesSupported(List<String> featuresSupported) {
    this.featuresSupported = featuresSupported;
  }

  public DeviceInnerDeviceInfo fileSystemList(List<DeviceInnerDeviceInfoFileSystemList> fileSystemList) {
    this.fileSystemList = fileSystemList;
    return this;
  }

  public DeviceInnerDeviceInfo addFileSystemListItem(DeviceInnerDeviceInfoFileSystemList fileSystemListItem) {
    if (this.fileSystemList == null) {
      this.fileSystemList = new ArrayList<>();
    }
    this.fileSystemList.add(fileSystemListItem);
    return this;
  }

   /**
   * Get fileSystemList
   * @return fileSystemList
  **/
  @ApiModelProperty(value = "")
  public List<DeviceInnerDeviceInfoFileSystemList> getFileSystemList() {
    return fileSystemList;
  }

  public void setFileSystemList(List<DeviceInnerDeviceInfoFileSystemList> fileSystemList) {
    this.fileSystemList = fileSystemList;
  }

  public DeviceInnerDeviceInfo firstContact(Integer firstContact) {
    this.firstContact = firstContact;
    return this;
  }

   /**
   * Get firstContact
   * @return firstContact
  **/
  @ApiModelProperty(value = "")
  public Integer getFirstContact() {
    return firstContact;
  }

  public void setFirstContact(Integer firstContact) {
    this.firstContact = firstContact;
  }

  public DeviceInnerDeviceInfo hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @ApiModelProperty(value = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public DeviceInnerDeviceInfo httpHeaders(List<ResetRequestConfigParameters> httpHeaders) {
    this.httpHeaders = httpHeaders;
    return this;
  }

  public DeviceInnerDeviceInfo addHttpHeadersItem(ResetRequestConfigParameters httpHeadersItem) {
    if (this.httpHeaders == null) {
      this.httpHeaders = new ArrayList<>();
    }
    this.httpHeaders.add(httpHeadersItem);
    return this;
  }

   /**
   * Get httpHeaders
   * @return httpHeaders
  **/
  @ApiModelProperty(value = "")
  public List<ResetRequestConfigParameters> getHttpHeaders() {
    return httpHeaders;
  }

  public void setHttpHeaders(List<ResetRequestConfigParameters> httpHeaders) {
    this.httpHeaders = httpHeaders;
  }

  public DeviceInnerDeviceInfo imageFile(String imageFile) {
    this.imageFile = imageFile;
    return this;
  }

   /**
   * Get imageFile
   * @return imageFile
  **/
  @ApiModelProperty(value = "")
  public String getImageFile() {
    return imageFile;
  }

  public void setImageFile(String imageFile) {
    this.imageFile = imageFile;
  }

  public DeviceInnerDeviceInfo imageVersion(String imageVersion) {
    this.imageVersion = imageVersion;
    return this;
  }

   /**
   * Get imageVersion
   * @return imageVersion
  **/
  @ApiModelProperty(value = "")
  public String getImageVersion() {
    return imageVersion;
  }

  public void setImageVersion(String imageVersion) {
    this.imageVersion = imageVersion;
  }

  public DeviceInnerDeviceInfo ipInterfaces(List<DeviceInnerDeviceInfoIpInterfaces> ipInterfaces) {
    this.ipInterfaces = ipInterfaces;
    return this;
  }

  public DeviceInnerDeviceInfo addIpInterfacesItem(DeviceInnerDeviceInfoIpInterfaces ipInterfacesItem) {
    if (this.ipInterfaces == null) {
      this.ipInterfaces = new ArrayList<>();
    }
    this.ipInterfaces.add(ipInterfacesItem);
    return this;
  }

   /**
   * Get ipInterfaces
   * @return ipInterfaces
  **/
  @ApiModelProperty(value = "")
  public List<DeviceInnerDeviceInfoIpInterfaces> getIpInterfaces() {
    return ipInterfaces;
  }

  public void setIpInterfaces(List<DeviceInnerDeviceInfoIpInterfaces> ipInterfaces) {
    this.ipInterfaces = ipInterfaces;
  }

  public DeviceInnerDeviceInfo lastContact(Integer lastContact) {
    this.lastContact = lastContact;
    return this;
  }

   /**
   * Get lastContact
   * @return lastContact
  **/
  @ApiModelProperty(value = "")
  public Integer getLastContact() {
    return lastContact;
  }

  public void setLastContact(Integer lastContact) {
    this.lastContact = lastContact;
  }

  public DeviceInnerDeviceInfo lastSyncTime(Integer lastSyncTime) {
    this.lastSyncTime = lastSyncTime;
    return this;
  }

   /**
   * Get lastSyncTime
   * @return lastSyncTime
  **/
  @ApiModelProperty(value = "")
  public Integer getLastSyncTime() {
    return lastSyncTime;
  }

  public void setLastSyncTime(Integer lastSyncTime) {
    this.lastSyncTime = lastSyncTime;
  }

  public DeviceInnerDeviceInfo lastUpdateOn(Integer lastUpdateOn) {
    this.lastUpdateOn = lastUpdateOn;
    return this;
  }

   /**
   * Get lastUpdateOn
   * @return lastUpdateOn
  **/
  @ApiModelProperty(value = "")
  public Integer getLastUpdateOn() {
    return lastUpdateOn;
  }

  public void setLastUpdateOn(Integer lastUpdateOn) {
    this.lastUpdateOn = lastUpdateOn;
  }

  public DeviceInnerDeviceInfo location(DeviceInnerDeviceInfoLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public DeviceInnerDeviceInfoLocation getLocation() {
    return location;
  }

  public void setLocation(DeviceInnerDeviceInfoLocation location) {
    this.location = location;
  }

  public DeviceInnerDeviceInfo macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

   /**
   * Get macAddress
   * @return macAddress
  **/
  @ApiModelProperty(value = "")
  public String getMacAddress() {
    return macAddress;
  }

  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }

  public DeviceInnerDeviceInfo mode(String mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @ApiModelProperty(value = "")
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }

  public DeviceInnerDeviceInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DeviceInnerDeviceInfo neighborLinks(List<DeviceInnerDeviceInfoNeighborLinks> neighborLinks) {
    this.neighborLinks = neighborLinks;
    return this;
  }

  public DeviceInnerDeviceInfo addNeighborLinksItem(DeviceInnerDeviceInfoNeighborLinks neighborLinksItem) {
    if (this.neighborLinks == null) {
      this.neighborLinks = new ArrayList<>();
    }
    this.neighborLinks.add(neighborLinksItem);
    return this;
  }

   /**
   * Get neighborLinks
   * @return neighborLinks
  **/
  @ApiModelProperty(value = "")
  public List<DeviceInnerDeviceInfoNeighborLinks> getNeighborLinks() {
    return neighborLinks;
  }

  public void setNeighborLinks(List<DeviceInnerDeviceInfoNeighborLinks> neighborLinks) {
    this.neighborLinks = neighborLinks;
  }

  public DeviceInnerDeviceInfo onbState(OnbStateEnum onbState) {
    this.onbState = onbState;
    return this;
  }

   /**
   * Get onbState
   * @return onbState
  **/
  @ApiModelProperty(value = "")
  public OnbStateEnum getOnbState() {
    return onbState;
  }

  public void setOnbState(OnbStateEnum onbState) {
    this.onbState = onbState;
  }

  public DeviceInnerDeviceInfo pid(String pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @ApiModelProperty(value = "")
  public String getPid() {
    return pid;
  }

  public void setPid(String pid) {
    this.pid = pid;
  }

  public DeviceInnerDeviceInfo pnpProfileList(List<DeviceInnerDeviceInfoPnpProfileList> pnpProfileList) {
    this.pnpProfileList = pnpProfileList;
    return this;
  }

  public DeviceInnerDeviceInfo addPnpProfileListItem(DeviceInnerDeviceInfoPnpProfileList pnpProfileListItem) {
    if (this.pnpProfileList == null) {
      this.pnpProfileList = new ArrayList<>();
    }
    this.pnpProfileList.add(pnpProfileListItem);
    return this;
  }

   /**
   * Get pnpProfileList
   * @return pnpProfileList
  **/
  @ApiModelProperty(value = "")
  public List<DeviceInnerDeviceInfoPnpProfileList> getPnpProfileList() {
    return pnpProfileList;
  }

  public void setPnpProfileList(List<DeviceInnerDeviceInfoPnpProfileList> pnpProfileList) {
    this.pnpProfileList = pnpProfileList;
  }

  public DeviceInnerDeviceInfo preWorkflowCliOuputs(List<DeviceInnerDeviceInfoPreWorkflowCliOuputs> preWorkflowCliOuputs) {
    this.preWorkflowCliOuputs = preWorkflowCliOuputs;
    return this;
  }

  public DeviceInnerDeviceInfo addPreWorkflowCliOuputsItem(DeviceInnerDeviceInfoPreWorkflowCliOuputs preWorkflowCliOuputsItem) {
    if (this.preWorkflowCliOuputs == null) {
      this.preWorkflowCliOuputs = new ArrayList<>();
    }
    this.preWorkflowCliOuputs.add(preWorkflowCliOuputsItem);
    return this;
  }

   /**
   * Get preWorkflowCliOuputs
   * @return preWorkflowCliOuputs
  **/
  @ApiModelProperty(value = "")
  public List<DeviceInnerDeviceInfoPreWorkflowCliOuputs> getPreWorkflowCliOuputs() {
    return preWorkflowCliOuputs;
  }

  public void setPreWorkflowCliOuputs(List<DeviceInnerDeviceInfoPreWorkflowCliOuputs> preWorkflowCliOuputs) {
    this.preWorkflowCliOuputs = preWorkflowCliOuputs;
  }

  public DeviceInnerDeviceInfo projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @ApiModelProperty(value = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public DeviceInnerDeviceInfo projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @ApiModelProperty(value = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DeviceInnerDeviceInfo reloadRequested(Boolean reloadRequested) {
    this.reloadRequested = reloadRequested;
    return this;
  }

   /**
   * Get reloadRequested
   * @return reloadRequested
  **/
  @ApiModelProperty(value = "")
  public Boolean isReloadRequested() {
    return reloadRequested;
  }

  public void setReloadRequested(Boolean reloadRequested) {
    this.reloadRequested = reloadRequested;
  }

  public DeviceInnerDeviceInfo serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @ApiModelProperty(value = "")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public DeviceInnerDeviceInfo smartAccountId(String smartAccountId) {
    this.smartAccountId = smartAccountId;
    return this;
  }

   /**
   * Get smartAccountId
   * @return smartAccountId
  **/
  @ApiModelProperty(value = "")
  public String getSmartAccountId() {
    return smartAccountId;
  }

  public void setSmartAccountId(String smartAccountId) {
    this.smartAccountId = smartAccountId;
  }

  public DeviceInnerDeviceInfo source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public DeviceInnerDeviceInfo stack(Boolean stack) {
    this.stack = stack;
    return this;
  }

   /**
   * Get stack
   * @return stack
  **/
  @ApiModelProperty(value = "")
  public Boolean isStack() {
    return stack;
  }

  public void setStack(Boolean stack) {
    this.stack = stack;
  }

  public DeviceInnerDeviceInfo stackInfo(DeviceInnerDeviceInfoStackInfo stackInfo) {
    this.stackInfo = stackInfo;
    return this;
  }

   /**
   * Get stackInfo
   * @return stackInfo
  **/
  @ApiModelProperty(value = "")
  public DeviceInnerDeviceInfoStackInfo getStackInfo() {
    return stackInfo;
  }

  public void setStackInfo(DeviceInnerDeviceInfoStackInfo stackInfo) {
    this.stackInfo = stackInfo;
  }

  public DeviceInnerDeviceInfo state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public DeviceInnerDeviceInfo sudiRequired(Boolean sudiRequired) {
    this.sudiRequired = sudiRequired;
    return this;
  }

   /**
   * Get sudiRequired
   * @return sudiRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean isSudiRequired() {
    return sudiRequired;
  }

  public void setSudiRequired(Boolean sudiRequired) {
    this.sudiRequired = sudiRequired;
  }

  public DeviceInnerDeviceInfo tags(Object tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public Object getTags() {
    return tags;
  }

  public void setTags(Object tags) {
    this.tags = tags;
  }

  public DeviceInnerDeviceInfo userSudiSerialNos(List<String> userSudiSerialNos) {
    this.userSudiSerialNos = userSudiSerialNos;
    return this;
  }

  public DeviceInnerDeviceInfo addUserSudiSerialNosItem(String userSudiSerialNosItem) {
    if (this.userSudiSerialNos == null) {
      this.userSudiSerialNos = new ArrayList<>();
    }
    this.userSudiSerialNos.add(userSudiSerialNosItem);
    return this;
  }

   /**
   * Get userSudiSerialNos
   * @return userSudiSerialNos
  **/
  @ApiModelProperty(value = "")
  public List<String> getUserSudiSerialNos() {
    return userSudiSerialNos;
  }

  public void setUserSudiSerialNos(List<String> userSudiSerialNos) {
    this.userSudiSerialNos = userSudiSerialNos;
  }

  public DeviceInnerDeviceInfo virtualAccountId(String virtualAccountId) {
    this.virtualAccountId = virtualAccountId;
    return this;
  }

   /**
   * Get virtualAccountId
   * @return virtualAccountId
  **/
  @ApiModelProperty(value = "")
  public String getVirtualAccountId() {
    return virtualAccountId;
  }

  public void setVirtualAccountId(String virtualAccountId) {
    this.virtualAccountId = virtualAccountId;
  }

  public DeviceInnerDeviceInfo workflowId(String workflowId) {
    this.workflowId = workflowId;
    return this;
  }

   /**
   * Get workflowId
   * @return workflowId
  **/
  @ApiModelProperty(value = "")
  public String getWorkflowId() {
    return workflowId;
  }

  public void setWorkflowId(String workflowId) {
    this.workflowId = workflowId;
  }

  public DeviceInnerDeviceInfo workflowName(String workflowName) {
    this.workflowName = workflowName;
    return this;
  }

   /**
   * Get workflowName
   * @return workflowName
  **/
  @ApiModelProperty(value = "")
  public String getWorkflowName() {
    return workflowName;
  }

  public void setWorkflowName(String workflowName) {
    this.workflowName = workflowName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceInnerDeviceInfo deviceInnerDeviceInfo = (DeviceInnerDeviceInfo) o;
    return Objects.equals(this.aaaCredentials, deviceInnerDeviceInfo.aaaCredentials) &&
        Objects.equals(this.addedOn, deviceInnerDeviceInfo.addedOn) &&
        Objects.equals(this.addnMacAddrs, deviceInnerDeviceInfo.addnMacAddrs) &&
        Objects.equals(this.agentType, deviceInnerDeviceInfo.agentType) &&
        Objects.equals(this.authStatus, deviceInnerDeviceInfo.authStatus) &&
        Objects.equals(this.authenticatedSudiSerialNo, deviceInnerDeviceInfo.authenticatedSudiSerialNo) &&
        Objects.equals(this.capabilitiesSupported, deviceInnerDeviceInfo.capabilitiesSupported) &&
        Objects.equals(this.cmState, deviceInnerDeviceInfo.cmState) &&
        Objects.equals(this.description, deviceInnerDeviceInfo.description) &&
        Objects.equals(this.deviceSudiSerialNos, deviceInnerDeviceInfo.deviceSudiSerialNos) &&
        Objects.equals(this.deviceType, deviceInnerDeviceInfo.deviceType) &&
        Objects.equals(this.featuresSupported, deviceInnerDeviceInfo.featuresSupported) &&
        Objects.equals(this.fileSystemList, deviceInnerDeviceInfo.fileSystemList) &&
        Objects.equals(this.firstContact, deviceInnerDeviceInfo.firstContact) &&
        Objects.equals(this.hostname, deviceInnerDeviceInfo.hostname) &&
        Objects.equals(this.httpHeaders, deviceInnerDeviceInfo.httpHeaders) &&
        Objects.equals(this.imageFile, deviceInnerDeviceInfo.imageFile) &&
        Objects.equals(this.imageVersion, deviceInnerDeviceInfo.imageVersion) &&
        Objects.equals(this.ipInterfaces, deviceInnerDeviceInfo.ipInterfaces) &&
        Objects.equals(this.lastContact, deviceInnerDeviceInfo.lastContact) &&
        Objects.equals(this.lastSyncTime, deviceInnerDeviceInfo.lastSyncTime) &&
        Objects.equals(this.lastUpdateOn, deviceInnerDeviceInfo.lastUpdateOn) &&
        Objects.equals(this.location, deviceInnerDeviceInfo.location) &&
        Objects.equals(this.macAddress, deviceInnerDeviceInfo.macAddress) &&
        Objects.equals(this.mode, deviceInnerDeviceInfo.mode) &&
        Objects.equals(this.name, deviceInnerDeviceInfo.name) &&
        Objects.equals(this.neighborLinks, deviceInnerDeviceInfo.neighborLinks) &&
        Objects.equals(this.onbState, deviceInnerDeviceInfo.onbState) &&
        Objects.equals(this.pid, deviceInnerDeviceInfo.pid) &&
        Objects.equals(this.pnpProfileList, deviceInnerDeviceInfo.pnpProfileList) &&
        Objects.equals(this.preWorkflowCliOuputs, deviceInnerDeviceInfo.preWorkflowCliOuputs) &&
        Objects.equals(this.projectId, deviceInnerDeviceInfo.projectId) &&
        Objects.equals(this.projectName, deviceInnerDeviceInfo.projectName) &&
        Objects.equals(this.reloadRequested, deviceInnerDeviceInfo.reloadRequested) &&
        Objects.equals(this.serialNumber, deviceInnerDeviceInfo.serialNumber) &&
        Objects.equals(this.smartAccountId, deviceInnerDeviceInfo.smartAccountId) &&
        Objects.equals(this.source, deviceInnerDeviceInfo.source) &&
        Objects.equals(this.stack, deviceInnerDeviceInfo.stack) &&
        Objects.equals(this.stackInfo, deviceInnerDeviceInfo.stackInfo) &&
        Objects.equals(this.state, deviceInnerDeviceInfo.state) &&
        Objects.equals(this.sudiRequired, deviceInnerDeviceInfo.sudiRequired) &&
        Objects.equals(this.tags, deviceInnerDeviceInfo.tags) &&
        Objects.equals(this.userSudiSerialNos, deviceInnerDeviceInfo.userSudiSerialNos) &&
        Objects.equals(this.virtualAccountId, deviceInnerDeviceInfo.virtualAccountId) &&
        Objects.equals(this.workflowId, deviceInnerDeviceInfo.workflowId) &&
        Objects.equals(this.workflowName, deviceInnerDeviceInfo.workflowName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aaaCredentials, addedOn, addnMacAddrs, agentType, authStatus, authenticatedSudiSerialNo, capabilitiesSupported, cmState, description, deviceSudiSerialNos, deviceType, featuresSupported, fileSystemList, firstContact, hostname, httpHeaders, imageFile, imageVersion, ipInterfaces, lastContact, lastSyncTime, lastUpdateOn, location, macAddress, mode, name, neighborLinks, onbState, pid, pnpProfileList, preWorkflowCliOuputs, projectId, projectName, reloadRequested, serialNumber, smartAccountId, source, stack, stackInfo, state, sudiRequired, tags, userSudiSerialNos, virtualAccountId, workflowId, workflowName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceInnerDeviceInfo {\n");
    
    sb.append("    aaaCredentials: ").append(toIndentedString(aaaCredentials)).append("\n");
    sb.append("    addedOn: ").append(toIndentedString(addedOn)).append("\n");
    sb.append("    addnMacAddrs: ").append(toIndentedString(addnMacAddrs)).append("\n");
    sb.append("    agentType: ").append(toIndentedString(agentType)).append("\n");
    sb.append("    authStatus: ").append(toIndentedString(authStatus)).append("\n");
    sb.append("    authenticatedSudiSerialNo: ").append(toIndentedString(authenticatedSudiSerialNo)).append("\n");
    sb.append("    capabilitiesSupported: ").append(toIndentedString(capabilitiesSupported)).append("\n");
    sb.append("    cmState: ").append(toIndentedString(cmState)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deviceSudiSerialNos: ").append(toIndentedString(deviceSudiSerialNos)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    featuresSupported: ").append(toIndentedString(featuresSupported)).append("\n");
    sb.append("    fileSystemList: ").append(toIndentedString(fileSystemList)).append("\n");
    sb.append("    firstContact: ").append(toIndentedString(firstContact)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    httpHeaders: ").append(toIndentedString(httpHeaders)).append("\n");
    sb.append("    imageFile: ").append(toIndentedString(imageFile)).append("\n");
    sb.append("    imageVersion: ").append(toIndentedString(imageVersion)).append("\n");
    sb.append("    ipInterfaces: ").append(toIndentedString(ipInterfaces)).append("\n");
    sb.append("    lastContact: ").append(toIndentedString(lastContact)).append("\n");
    sb.append("    lastSyncTime: ").append(toIndentedString(lastSyncTime)).append("\n");
    sb.append("    lastUpdateOn: ").append(toIndentedString(lastUpdateOn)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    neighborLinks: ").append(toIndentedString(neighborLinks)).append("\n");
    sb.append("    onbState: ").append(toIndentedString(onbState)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    pnpProfileList: ").append(toIndentedString(pnpProfileList)).append("\n");
    sb.append("    preWorkflowCliOuputs: ").append(toIndentedString(preWorkflowCliOuputs)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    reloadRequested: ").append(toIndentedString(reloadRequested)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    smartAccountId: ").append(toIndentedString(smartAccountId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    stack: ").append(toIndentedString(stack)).append("\n");
    sb.append("    stackInfo: ").append(toIndentedString(stackInfo)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    sudiRequired: ").append(toIndentedString(sudiRequired)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    userSudiSerialNos: ").append(toIndentedString(userSudiSerialNos)).append("\n");
    sb.append("    virtualAccountId: ").append(toIndentedString(virtualAccountId)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    workflowName: ").append(toIndentedString(workflowName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

