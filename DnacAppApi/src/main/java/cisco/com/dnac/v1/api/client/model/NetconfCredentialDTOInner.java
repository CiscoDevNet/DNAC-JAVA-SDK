/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetconfCredentialDTOInner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class NetconfCredentialDTOInner {
  @SerializedName("comments")
  private String comments = null;

  /**
   * Gets or Sets credentialType
   */
  @JsonAdapter(CredentialTypeEnum.Adapter.class)
  public enum CredentialTypeEnum {
    GLOBAL("GLOBAL"),
    
    APP("APP");

    private String value;

    CredentialTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CredentialTypeEnum fromValue(String text) {
      for (CredentialTypeEnum b : CredentialTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CredentialTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CredentialTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CredentialTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CredentialTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("credentialType")
  private CredentialTypeEnum credentialType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("instanceTenantId")
  private String instanceTenantId = null;

  @SerializedName("instanceUuid")
  private String instanceUuid = null;

  @SerializedName("netconfPort")
  private String netconfPort = null;

  public NetconfCredentialDTOInner comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @ApiModelProperty(value = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public NetconfCredentialDTOInner credentialType(CredentialTypeEnum credentialType) {
    this.credentialType = credentialType;
    return this;
  }

   /**
   * Get credentialType
   * @return credentialType
  **/
  @ApiModelProperty(value = "")
  public CredentialTypeEnum getCredentialType() {
    return credentialType;
  }

  public void setCredentialType(CredentialTypeEnum credentialType) {
    this.credentialType = credentialType;
  }

  public NetconfCredentialDTOInner description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NetconfCredentialDTOInner id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NetconfCredentialDTOInner instanceTenantId(String instanceTenantId) {
    this.instanceTenantId = instanceTenantId;
    return this;
  }

   /**
   * Get instanceTenantId
   * @return instanceTenantId
  **/
  @ApiModelProperty(value = "")
  public String getInstanceTenantId() {
    return instanceTenantId;
  }

  public void setInstanceTenantId(String instanceTenantId) {
    this.instanceTenantId = instanceTenantId;
  }

  public NetconfCredentialDTOInner instanceUuid(String instanceUuid) {
    this.instanceUuid = instanceUuid;
    return this;
  }

   /**
   * Get instanceUuid
   * @return instanceUuid
  **/
  @ApiModelProperty(value = "")
  public String getInstanceUuid() {
    return instanceUuid;
  }

  public void setInstanceUuid(String instanceUuid) {
    this.instanceUuid = instanceUuid;
  }

  public NetconfCredentialDTOInner netconfPort(String netconfPort) {
    this.netconfPort = netconfPort;
    return this;
  }

   /**
   * Get netconfPort
   * @return netconfPort
  **/
  @ApiModelProperty(value = "")
  public String getNetconfPort() {
    return netconfPort;
  }

  public void setNetconfPort(String netconfPort) {
    this.netconfPort = netconfPort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetconfCredentialDTOInner netconfCredentialDTOInner = (NetconfCredentialDTOInner) o;
    return Objects.equals(this.comments, netconfCredentialDTOInner.comments) &&
        Objects.equals(this.credentialType, netconfCredentialDTOInner.credentialType) &&
        Objects.equals(this.description, netconfCredentialDTOInner.description) &&
        Objects.equals(this.id, netconfCredentialDTOInner.id) &&
        Objects.equals(this.instanceTenantId, netconfCredentialDTOInner.instanceTenantId) &&
        Objects.equals(this.instanceUuid, netconfCredentialDTOInner.instanceUuid) &&
        Objects.equals(this.netconfPort, netconfCredentialDTOInner.netconfPort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comments, credentialType, description, id, instanceTenantId, instanceUuid, netconfPort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetconfCredentialDTOInner {\n");
    
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    credentialType: ").append(toIndentedString(credentialType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instanceTenantId: ").append(toIndentedString(instanceTenantId)).append("\n");
    sb.append("    instanceUuid: ").append(toIndentedString(instanceUuid)).append("\n");
    sb.append("    netconfPort: ").append(toIndentedString(netconfPort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

