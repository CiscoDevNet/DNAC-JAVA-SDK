/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ActivateDTOInner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class ActivateDTOInner {
  @SerializedName("activateLowerImageVersion")
  private Boolean activateLowerImageVersion = null;

  @SerializedName("deviceUpgradeMode")
  private String deviceUpgradeMode = null;

  @SerializedName("deviceUuid")
  private String deviceUuid = null;

  @SerializedName("distributeIfNeeded")
  private Boolean distributeIfNeeded = null;

  @SerializedName("imageUuidList")
  private List<String> imageUuidList = null;

  @SerializedName("smuImageUuidList")
  private List<String> smuImageUuidList = null;

  public ActivateDTOInner activateLowerImageVersion(Boolean activateLowerImageVersion) {
    this.activateLowerImageVersion = activateLowerImageVersion;
    return this;
  }

   /**
   * Get activateLowerImageVersion
   * @return activateLowerImageVersion
  **/
  @ApiModelProperty(value = "")
  public Boolean isActivateLowerImageVersion() {
    return activateLowerImageVersion;
  }

  public void setActivateLowerImageVersion(Boolean activateLowerImageVersion) {
    this.activateLowerImageVersion = activateLowerImageVersion;
  }

  public ActivateDTOInner deviceUpgradeMode(String deviceUpgradeMode) {
    this.deviceUpgradeMode = deviceUpgradeMode;
    return this;
  }

   /**
   * Get deviceUpgradeMode
   * @return deviceUpgradeMode
  **/
  @ApiModelProperty(value = "")
  public String getDeviceUpgradeMode() {
    return deviceUpgradeMode;
  }

  public void setDeviceUpgradeMode(String deviceUpgradeMode) {
    this.deviceUpgradeMode = deviceUpgradeMode;
  }

  public ActivateDTOInner deviceUuid(String deviceUuid) {
    this.deviceUuid = deviceUuid;
    return this;
  }

   /**
   * Get deviceUuid
   * @return deviceUuid
  **/
  @ApiModelProperty(value = "")
  public String getDeviceUuid() {
    return deviceUuid;
  }

  public void setDeviceUuid(String deviceUuid) {
    this.deviceUuid = deviceUuid;
  }

  public ActivateDTOInner distributeIfNeeded(Boolean distributeIfNeeded) {
    this.distributeIfNeeded = distributeIfNeeded;
    return this;
  }

   /**
   * Get distributeIfNeeded
   * @return distributeIfNeeded
  **/
  @ApiModelProperty(value = "")
  public Boolean isDistributeIfNeeded() {
    return distributeIfNeeded;
  }

  public void setDistributeIfNeeded(Boolean distributeIfNeeded) {
    this.distributeIfNeeded = distributeIfNeeded;
  }

  public ActivateDTOInner imageUuidList(List<String> imageUuidList) {
    this.imageUuidList = imageUuidList;
    return this;
  }

  public ActivateDTOInner addImageUuidListItem(String imageUuidListItem) {
    if (this.imageUuidList == null) {
      this.imageUuidList = new ArrayList<>();
    }
    this.imageUuidList.add(imageUuidListItem);
    return this;
  }

   /**
   * Get imageUuidList
   * @return imageUuidList
  **/
  @ApiModelProperty(value = "")
  public List<String> getImageUuidList() {
    return imageUuidList;
  }

  public void setImageUuidList(List<String> imageUuidList) {
    this.imageUuidList = imageUuidList;
  }

  public ActivateDTOInner smuImageUuidList(List<String> smuImageUuidList) {
    this.smuImageUuidList = smuImageUuidList;
    return this;
  }

  public ActivateDTOInner addSmuImageUuidListItem(String smuImageUuidListItem) {
    if (this.smuImageUuidList == null) {
      this.smuImageUuidList = new ArrayList<>();
    }
    this.smuImageUuidList.add(smuImageUuidListItem);
    return this;
  }

   /**
   * Get smuImageUuidList
   * @return smuImageUuidList
  **/
  @ApiModelProperty(value = "")
  public List<String> getSmuImageUuidList() {
    return smuImageUuidList;
  }

  public void setSmuImageUuidList(List<String> smuImageUuidList) {
    this.smuImageUuidList = smuImageUuidList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivateDTOInner activateDTOInner = (ActivateDTOInner) o;
    return Objects.equals(this.activateLowerImageVersion, activateDTOInner.activateLowerImageVersion) &&
        Objects.equals(this.deviceUpgradeMode, activateDTOInner.deviceUpgradeMode) &&
        Objects.equals(this.deviceUuid, activateDTOInner.deviceUuid) &&
        Objects.equals(this.distributeIfNeeded, activateDTOInner.distributeIfNeeded) &&
        Objects.equals(this.imageUuidList, activateDTOInner.imageUuidList) &&
        Objects.equals(this.smuImageUuidList, activateDTOInner.smuImageUuidList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activateLowerImageVersion, deviceUpgradeMode, deviceUuid, distributeIfNeeded, imageUuidList, smuImageUuidList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivateDTOInner {\n");
    
    sb.append("    activateLowerImageVersion: ").append(toIndentedString(activateLowerImageVersion)).append("\n");
    sb.append("    deviceUpgradeMode: ").append(toIndentedString(deviceUpgradeMode)).append("\n");
    sb.append("    deviceUuid: ").append(toIndentedString(deviceUuid)).append("\n");
    sb.append("    distributeIfNeeded: ").append(toIndentedString(distributeIfNeeded)).append("\n");
    sb.append("    imageUuidList: ").append(toIndentedString(imageUuidList)).append("\n");
    sb.append("    smuImageUuidList: ").append(toIndentedString(smuImageUuidList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

