/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeviceInnerDeviceInfoNeighborLinks
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class DeviceInnerDeviceInfoNeighborLinks {
  @SerializedName("localInterfaceName")
  private String localInterfaceName = null;

  @SerializedName("localMacAddress")
  private String localMacAddress = null;

  @SerializedName("localShortInterfaceName")
  private String localShortInterfaceName = null;

  @SerializedName("remoteDeviceName")
  private String remoteDeviceName = null;

  @SerializedName("remoteInterfaceName")
  private String remoteInterfaceName = null;

  @SerializedName("remoteMacAddress")
  private String remoteMacAddress = null;

  @SerializedName("remotePlatform")
  private String remotePlatform = null;

  @SerializedName("remoteShortInterfaceName")
  private String remoteShortInterfaceName = null;

  @SerializedName("remoteVersion")
  private String remoteVersion = null;

  public DeviceInnerDeviceInfoNeighborLinks localInterfaceName(String localInterfaceName) {
    this.localInterfaceName = localInterfaceName;
    return this;
  }

   /**
   * Get localInterfaceName
   * @return localInterfaceName
  **/
  @ApiModelProperty(value = "")
  public String getLocalInterfaceName() {
    return localInterfaceName;
  }

  public void setLocalInterfaceName(String localInterfaceName) {
    this.localInterfaceName = localInterfaceName;
  }

  public DeviceInnerDeviceInfoNeighborLinks localMacAddress(String localMacAddress) {
    this.localMacAddress = localMacAddress;
    return this;
  }

   /**
   * Get localMacAddress
   * @return localMacAddress
  **/
  @ApiModelProperty(value = "")
  public String getLocalMacAddress() {
    return localMacAddress;
  }

  public void setLocalMacAddress(String localMacAddress) {
    this.localMacAddress = localMacAddress;
  }

  public DeviceInnerDeviceInfoNeighborLinks localShortInterfaceName(String localShortInterfaceName) {
    this.localShortInterfaceName = localShortInterfaceName;
    return this;
  }

   /**
   * Get localShortInterfaceName
   * @return localShortInterfaceName
  **/
  @ApiModelProperty(value = "")
  public String getLocalShortInterfaceName() {
    return localShortInterfaceName;
  }

  public void setLocalShortInterfaceName(String localShortInterfaceName) {
    this.localShortInterfaceName = localShortInterfaceName;
  }

  public DeviceInnerDeviceInfoNeighborLinks remoteDeviceName(String remoteDeviceName) {
    this.remoteDeviceName = remoteDeviceName;
    return this;
  }

   /**
   * Get remoteDeviceName
   * @return remoteDeviceName
  **/
  @ApiModelProperty(value = "")
  public String getRemoteDeviceName() {
    return remoteDeviceName;
  }

  public void setRemoteDeviceName(String remoteDeviceName) {
    this.remoteDeviceName = remoteDeviceName;
  }

  public DeviceInnerDeviceInfoNeighborLinks remoteInterfaceName(String remoteInterfaceName) {
    this.remoteInterfaceName = remoteInterfaceName;
    return this;
  }

   /**
   * Get remoteInterfaceName
   * @return remoteInterfaceName
  **/
  @ApiModelProperty(value = "")
  public String getRemoteInterfaceName() {
    return remoteInterfaceName;
  }

  public void setRemoteInterfaceName(String remoteInterfaceName) {
    this.remoteInterfaceName = remoteInterfaceName;
  }

  public DeviceInnerDeviceInfoNeighborLinks remoteMacAddress(String remoteMacAddress) {
    this.remoteMacAddress = remoteMacAddress;
    return this;
  }

   /**
   * Get remoteMacAddress
   * @return remoteMacAddress
  **/
  @ApiModelProperty(value = "")
  public String getRemoteMacAddress() {
    return remoteMacAddress;
  }

  public void setRemoteMacAddress(String remoteMacAddress) {
    this.remoteMacAddress = remoteMacAddress;
  }

  public DeviceInnerDeviceInfoNeighborLinks remotePlatform(String remotePlatform) {
    this.remotePlatform = remotePlatform;
    return this;
  }

   /**
   * Get remotePlatform
   * @return remotePlatform
  **/
  @ApiModelProperty(value = "")
  public String getRemotePlatform() {
    return remotePlatform;
  }

  public void setRemotePlatform(String remotePlatform) {
    this.remotePlatform = remotePlatform;
  }

  public DeviceInnerDeviceInfoNeighborLinks remoteShortInterfaceName(String remoteShortInterfaceName) {
    this.remoteShortInterfaceName = remoteShortInterfaceName;
    return this;
  }

   /**
   * Get remoteShortInterfaceName
   * @return remoteShortInterfaceName
  **/
  @ApiModelProperty(value = "")
  public String getRemoteShortInterfaceName() {
    return remoteShortInterfaceName;
  }

  public void setRemoteShortInterfaceName(String remoteShortInterfaceName) {
    this.remoteShortInterfaceName = remoteShortInterfaceName;
  }

  public DeviceInnerDeviceInfoNeighborLinks remoteVersion(String remoteVersion) {
    this.remoteVersion = remoteVersion;
    return this;
  }

   /**
   * Get remoteVersion
   * @return remoteVersion
  **/
  @ApiModelProperty(value = "")
  public String getRemoteVersion() {
    return remoteVersion;
  }

  public void setRemoteVersion(String remoteVersion) {
    this.remoteVersion = remoteVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceInnerDeviceInfoNeighborLinks deviceInnerDeviceInfoNeighborLinks = (DeviceInnerDeviceInfoNeighborLinks) o;
    return Objects.equals(this.localInterfaceName, deviceInnerDeviceInfoNeighborLinks.localInterfaceName) &&
        Objects.equals(this.localMacAddress, deviceInnerDeviceInfoNeighborLinks.localMacAddress) &&
        Objects.equals(this.localShortInterfaceName, deviceInnerDeviceInfoNeighborLinks.localShortInterfaceName) &&
        Objects.equals(this.remoteDeviceName, deviceInnerDeviceInfoNeighborLinks.remoteDeviceName) &&
        Objects.equals(this.remoteInterfaceName, deviceInnerDeviceInfoNeighborLinks.remoteInterfaceName) &&
        Objects.equals(this.remoteMacAddress, deviceInnerDeviceInfoNeighborLinks.remoteMacAddress) &&
        Objects.equals(this.remotePlatform, deviceInnerDeviceInfoNeighborLinks.remotePlatform) &&
        Objects.equals(this.remoteShortInterfaceName, deviceInnerDeviceInfoNeighborLinks.remoteShortInterfaceName) &&
        Objects.equals(this.remoteVersion, deviceInnerDeviceInfoNeighborLinks.remoteVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localInterfaceName, localMacAddress, localShortInterfaceName, remoteDeviceName, remoteInterfaceName, remoteMacAddress, remotePlatform, remoteShortInterfaceName, remoteVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceInnerDeviceInfoNeighborLinks {\n");
    
    sb.append("    localInterfaceName: ").append(toIndentedString(localInterfaceName)).append("\n");
    sb.append("    localMacAddress: ").append(toIndentedString(localMacAddress)).append("\n");
    sb.append("    localShortInterfaceName: ").append(toIndentedString(localShortInterfaceName)).append("\n");
    sb.append("    remoteDeviceName: ").append(toIndentedString(remoteDeviceName)).append("\n");
    sb.append("    remoteInterfaceName: ").append(toIndentedString(remoteInterfaceName)).append("\n");
    sb.append("    remoteMacAddress: ").append(toIndentedString(remoteMacAddress)).append("\n");
    sb.append("    remotePlatform: ").append(toIndentedString(remotePlatform)).append("\n");
    sb.append("    remoteShortInterfaceName: ").append(toIndentedString(remoteShortInterfaceName)).append("\n");
    sb.append("    remoteVersion: ").append(toIndentedString(remoteVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

