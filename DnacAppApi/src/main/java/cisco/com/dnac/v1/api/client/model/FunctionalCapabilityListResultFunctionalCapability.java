/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import cisco.com.dnac.v1.api.client.model.FunctionalCapabilityListResultFunctionDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * FunctionalCapabilityListResultFunctionalCapability
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class FunctionalCapabilityListResultFunctionalCapability {
  @SerializedName("attributeInfo")
  private Object attributeInfo = null;

  @SerializedName("functionDetails")
  private List<FunctionalCapabilityListResultFunctionDetails> functionDetails = null;

  @SerializedName("functionName")
  private String functionName = null;

  /**
   * Gets or Sets functionOpState
   */
  @JsonAdapter(FunctionOpStateEnum.Adapter.class)
  public enum FunctionOpStateEnum {
    UNKNOWN("UNKNOWN"),
    
    NOT_APPLICABLE("NOT_APPLICABLE"),
    
    DISABLED("DISABLED"),
    
    ENABLED("ENABLED");

    private String value;

    FunctionOpStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FunctionOpStateEnum fromValue(String text) {
      for (FunctionOpStateEnum b : FunctionOpStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FunctionOpStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FunctionOpStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FunctionOpStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FunctionOpStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("functionOpState")
  private FunctionOpStateEnum functionOpState = null;

  @SerializedName("id")
  private String id = null;

  public FunctionalCapabilityListResultFunctionalCapability attributeInfo(Object attributeInfo) {
    this.attributeInfo = attributeInfo;
    return this;
  }

   /**
   * Get attributeInfo
   * @return attributeInfo
  **/
  @ApiModelProperty(value = "")
  public Object getAttributeInfo() {
    return attributeInfo;
  }

  public void setAttributeInfo(Object attributeInfo) {
    this.attributeInfo = attributeInfo;
  }

  public FunctionalCapabilityListResultFunctionalCapability functionDetails(List<FunctionalCapabilityListResultFunctionDetails> functionDetails) {
    this.functionDetails = functionDetails;
    return this;
  }

  public FunctionalCapabilityListResultFunctionalCapability addFunctionDetailsItem(FunctionalCapabilityListResultFunctionDetails functionDetailsItem) {
    if (this.functionDetails == null) {
      this.functionDetails = new ArrayList<>();
    }
    this.functionDetails.add(functionDetailsItem);
    return this;
  }

   /**
   * Get functionDetails
   * @return functionDetails
  **/
  @ApiModelProperty(value = "")
  public List<FunctionalCapabilityListResultFunctionDetails> getFunctionDetails() {
    return functionDetails;
  }

  public void setFunctionDetails(List<FunctionalCapabilityListResultFunctionDetails> functionDetails) {
    this.functionDetails = functionDetails;
  }

  public FunctionalCapabilityListResultFunctionalCapability functionName(String functionName) {
    this.functionName = functionName;
    return this;
  }

   /**
   * Get functionName
   * @return functionName
  **/
  @ApiModelProperty(value = "")
  public String getFunctionName() {
    return functionName;
  }

  public void setFunctionName(String functionName) {
    this.functionName = functionName;
  }

  public FunctionalCapabilityListResultFunctionalCapability functionOpState(FunctionOpStateEnum functionOpState) {
    this.functionOpState = functionOpState;
    return this;
  }

   /**
   * Get functionOpState
   * @return functionOpState
  **/
  @ApiModelProperty(value = "")
  public FunctionOpStateEnum getFunctionOpState() {
    return functionOpState;
  }

  public void setFunctionOpState(FunctionOpStateEnum functionOpState) {
    this.functionOpState = functionOpState;
  }

  public FunctionalCapabilityListResultFunctionalCapability id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FunctionalCapabilityListResultFunctionalCapability functionalCapabilityListResultFunctionalCapability = (FunctionalCapabilityListResultFunctionalCapability) o;
    return Objects.equals(this.attributeInfo, functionalCapabilityListResultFunctionalCapability.attributeInfo) &&
        Objects.equals(this.functionDetails, functionalCapabilityListResultFunctionalCapability.functionDetails) &&
        Objects.equals(this.functionName, functionalCapabilityListResultFunctionalCapability.functionName) &&
        Objects.equals(this.functionOpState, functionalCapabilityListResultFunctionalCapability.functionOpState) &&
        Objects.equals(this.id, functionalCapabilityListResultFunctionalCapability.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeInfo, functionDetails, functionName, functionOpState, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FunctionalCapabilityListResultFunctionalCapability {\n");
    
    sb.append("    attributeInfo: ").append(toIndentedString(attributeInfo)).append("\n");
    sb.append("    functionDetails: ").append(toIndentedString(functionDetails)).append("\n");
    sb.append("    functionName: ").append(toIndentedString(functionName)).append("\n");
    sb.append("    functionOpState: ").append(toIndentedString(functionOpState)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

