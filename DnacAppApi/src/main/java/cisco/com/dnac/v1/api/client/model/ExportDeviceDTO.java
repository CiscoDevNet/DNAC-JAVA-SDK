/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ExportDeviceDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class ExportDeviceDTO {
  @SerializedName("deviceUuids")
  private List<String> deviceUuids = null;

  @SerializedName("id")
  private String id = null;

  /**
   * Gets or Sets operationEnum
   */
  @JsonAdapter(OperationEnumEnum.Adapter.class)
  public enum OperationEnumEnum {
    CREDENTIALDETAILS("CREDENTIALDETAILS"),
    
    DEVICEDETAILS("DEVICEDETAILS");

    private String value;

    OperationEnumEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperationEnumEnum fromValue(String text) {
      for (OperationEnumEnum b : OperationEnumEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OperationEnumEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationEnumEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperationEnumEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OperationEnumEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("operationEnum")
  private OperationEnumEnum operationEnum = null;

  @SerializedName("parameters")
  private List<String> parameters = null;

  @SerializedName("password")
  private String password = null;

  public ExportDeviceDTO deviceUuids(List<String> deviceUuids) {
    this.deviceUuids = deviceUuids;
    return this;
  }

  public ExportDeviceDTO addDeviceUuidsItem(String deviceUuidsItem) {
    if (this.deviceUuids == null) {
      this.deviceUuids = new ArrayList<>();
    }
    this.deviceUuids.add(deviceUuidsItem);
    return this;
  }

   /**
   * Get deviceUuids
   * @return deviceUuids
  **/
  @ApiModelProperty(value = "")
  public List<String> getDeviceUuids() {
    return deviceUuids;
  }

  public void setDeviceUuids(List<String> deviceUuids) {
    this.deviceUuids = deviceUuids;
  }

  public ExportDeviceDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ExportDeviceDTO operationEnum(OperationEnumEnum operationEnum) {
    this.operationEnum = operationEnum;
    return this;
  }

   /**
   * Get operationEnum
   * @return operationEnum
  **/
  @ApiModelProperty(value = "")
  public OperationEnumEnum getOperationEnum() {
    return operationEnum;
  }

  public void setOperationEnum(OperationEnumEnum operationEnum) {
    this.operationEnum = operationEnum;
  }

  public ExportDeviceDTO parameters(List<String> parameters) {
    this.parameters = parameters;
    return this;
  }

  public ExportDeviceDTO addParametersItem(String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(value = "")
  public List<String> getParameters() {
    return parameters;
  }

  public void setParameters(List<String> parameters) {
    this.parameters = parameters;
  }

  public ExportDeviceDTO password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportDeviceDTO exportDeviceDTO = (ExportDeviceDTO) o;
    return Objects.equals(this.deviceUuids, exportDeviceDTO.deviceUuids) &&
        Objects.equals(this.id, exportDeviceDTO.id) &&
        Objects.equals(this.operationEnum, exportDeviceDTO.operationEnum) &&
        Objects.equals(this.parameters, exportDeviceDTO.parameters) &&
        Objects.equals(this.password, exportDeviceDTO.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceUuids, id, operationEnum, parameters, password);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportDeviceDTO {\n");
    
    sb.append("    deviceUuids: ").append(toIndentedString(deviceUuids)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    operationEnum: ").append(toIndentedString(operationEnum)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

