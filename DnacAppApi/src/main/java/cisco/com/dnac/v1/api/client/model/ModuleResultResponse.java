/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ModuleResultResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class ModuleResultResponse {
  @SerializedName("assemblyNumber")
  private String assemblyNumber = null;

  @SerializedName("assemblyRevision")
  private String assemblyRevision = null;

  @SerializedName("attributeInfo")
  private Object attributeInfo = null;

  @SerializedName("containmentEntity")
  private String containmentEntity = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("entityPhysicalIndex")
  private String entityPhysicalIndex = null;

  @SerializedName("id")
  private String id = null;

  /**
   * Gets or Sets isFieldReplaceable
   */
  @JsonAdapter(IsFieldReplaceableEnum.Adapter.class)
  public enum IsFieldReplaceableEnum {
    UNKNOWN("UNKNOWN"),
    
    TRUE("TRUE"),
    
    FALSE("FALSE"),
    
    NOT_APPLICABLE("NOT_APPLICABLE");

    private String value;

    IsFieldReplaceableEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsFieldReplaceableEnum fromValue(String text) {
      for (IsFieldReplaceableEnum b : IsFieldReplaceableEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<IsFieldReplaceableEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsFieldReplaceableEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsFieldReplaceableEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return IsFieldReplaceableEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("isFieldReplaceable")
  private IsFieldReplaceableEnum isFieldReplaceable = null;

  /**
   * Gets or Sets isReportingAlarmsAllowed
   */
  @JsonAdapter(IsReportingAlarmsAllowedEnum.Adapter.class)
  public enum IsReportingAlarmsAllowedEnum {
    UNKNOWN("UNKNOWN"),
    
    TRUE("TRUE"),
    
    FALSE("FALSE"),
    
    NOT_APPLICABLE("NOT_APPLICABLE");

    private String value;

    IsReportingAlarmsAllowedEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsReportingAlarmsAllowedEnum fromValue(String text) {
      for (IsReportingAlarmsAllowedEnum b : IsReportingAlarmsAllowedEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<IsReportingAlarmsAllowedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsReportingAlarmsAllowedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsReportingAlarmsAllowedEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return IsReportingAlarmsAllowedEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("isReportingAlarmsAllowed")
  private IsReportingAlarmsAllowedEnum isReportingAlarmsAllowed = null;

  @SerializedName("manufacturer")
  private String manufacturer = null;

  @SerializedName("moduleIndex")
  private Integer moduleIndex = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("operationalStateCode")
  private String operationalStateCode = null;

  @SerializedName("partNumber")
  private String partNumber = null;

  @SerializedName("serialNumber")
  private String serialNumber = null;

  @SerializedName("vendorEquipmentType")
  private String vendorEquipmentType = null;

  public ModuleResultResponse assemblyNumber(String assemblyNumber) {
    this.assemblyNumber = assemblyNumber;
    return this;
  }

   /**
   * Get assemblyNumber
   * @return assemblyNumber
  **/
  @ApiModelProperty(value = "")
  public String getAssemblyNumber() {
    return assemblyNumber;
  }

  public void setAssemblyNumber(String assemblyNumber) {
    this.assemblyNumber = assemblyNumber;
  }

  public ModuleResultResponse assemblyRevision(String assemblyRevision) {
    this.assemblyRevision = assemblyRevision;
    return this;
  }

   /**
   * Get assemblyRevision
   * @return assemblyRevision
  **/
  @ApiModelProperty(value = "")
  public String getAssemblyRevision() {
    return assemblyRevision;
  }

  public void setAssemblyRevision(String assemblyRevision) {
    this.assemblyRevision = assemblyRevision;
  }

  public ModuleResultResponse attributeInfo(Object attributeInfo) {
    this.attributeInfo = attributeInfo;
    return this;
  }

   /**
   * Get attributeInfo
   * @return attributeInfo
  **/
  @ApiModelProperty(value = "")
  public Object getAttributeInfo() {
    return attributeInfo;
  }

  public void setAttributeInfo(Object attributeInfo) {
    this.attributeInfo = attributeInfo;
  }

  public ModuleResultResponse containmentEntity(String containmentEntity) {
    this.containmentEntity = containmentEntity;
    return this;
  }

   /**
   * Get containmentEntity
   * @return containmentEntity
  **/
  @ApiModelProperty(value = "")
  public String getContainmentEntity() {
    return containmentEntity;
  }

  public void setContainmentEntity(String containmentEntity) {
    this.containmentEntity = containmentEntity;
  }

  public ModuleResultResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ModuleResultResponse entityPhysicalIndex(String entityPhysicalIndex) {
    this.entityPhysicalIndex = entityPhysicalIndex;
    return this;
  }

   /**
   * Get entityPhysicalIndex
   * @return entityPhysicalIndex
  **/
  @ApiModelProperty(value = "")
  public String getEntityPhysicalIndex() {
    return entityPhysicalIndex;
  }

  public void setEntityPhysicalIndex(String entityPhysicalIndex) {
    this.entityPhysicalIndex = entityPhysicalIndex;
  }

  public ModuleResultResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ModuleResultResponse isFieldReplaceable(IsFieldReplaceableEnum isFieldReplaceable) {
    this.isFieldReplaceable = isFieldReplaceable;
    return this;
  }

   /**
   * Get isFieldReplaceable
   * @return isFieldReplaceable
  **/
  @ApiModelProperty(value = "")
  public IsFieldReplaceableEnum getIsFieldReplaceable() {
    return isFieldReplaceable;
  }

  public void setIsFieldReplaceable(IsFieldReplaceableEnum isFieldReplaceable) {
    this.isFieldReplaceable = isFieldReplaceable;
  }

  public ModuleResultResponse isReportingAlarmsAllowed(IsReportingAlarmsAllowedEnum isReportingAlarmsAllowed) {
    this.isReportingAlarmsAllowed = isReportingAlarmsAllowed;
    return this;
  }

   /**
   * Get isReportingAlarmsAllowed
   * @return isReportingAlarmsAllowed
  **/
  @ApiModelProperty(value = "")
  public IsReportingAlarmsAllowedEnum getIsReportingAlarmsAllowed() {
    return isReportingAlarmsAllowed;
  }

  public void setIsReportingAlarmsAllowed(IsReportingAlarmsAllowedEnum isReportingAlarmsAllowed) {
    this.isReportingAlarmsAllowed = isReportingAlarmsAllowed;
  }

  public ModuleResultResponse manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @ApiModelProperty(value = "")
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }

  public ModuleResultResponse moduleIndex(Integer moduleIndex) {
    this.moduleIndex = moduleIndex;
    return this;
  }

   /**
   * Get moduleIndex
   * @return moduleIndex
  **/
  @ApiModelProperty(value = "")
  public Integer getModuleIndex() {
    return moduleIndex;
  }

  public void setModuleIndex(Integer moduleIndex) {
    this.moduleIndex = moduleIndex;
  }

  public ModuleResultResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ModuleResultResponse operationalStateCode(String operationalStateCode) {
    this.operationalStateCode = operationalStateCode;
    return this;
  }

   /**
   * Get operationalStateCode
   * @return operationalStateCode
  **/
  @ApiModelProperty(value = "")
  public String getOperationalStateCode() {
    return operationalStateCode;
  }

  public void setOperationalStateCode(String operationalStateCode) {
    this.operationalStateCode = operationalStateCode;
  }

  public ModuleResultResponse partNumber(String partNumber) {
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Get partNumber
   * @return partNumber
  **/
  @ApiModelProperty(value = "")
  public String getPartNumber() {
    return partNumber;
  }

  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }

  public ModuleResultResponse serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @ApiModelProperty(value = "")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public ModuleResultResponse vendorEquipmentType(String vendorEquipmentType) {
    this.vendorEquipmentType = vendorEquipmentType;
    return this;
  }

   /**
   * Get vendorEquipmentType
   * @return vendorEquipmentType
  **/
  @ApiModelProperty(value = "")
  public String getVendorEquipmentType() {
    return vendorEquipmentType;
  }

  public void setVendorEquipmentType(String vendorEquipmentType) {
    this.vendorEquipmentType = vendorEquipmentType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleResultResponse moduleResultResponse = (ModuleResultResponse) o;
    return Objects.equals(this.assemblyNumber, moduleResultResponse.assemblyNumber) &&
        Objects.equals(this.assemblyRevision, moduleResultResponse.assemblyRevision) &&
        Objects.equals(this.attributeInfo, moduleResultResponse.attributeInfo) &&
        Objects.equals(this.containmentEntity, moduleResultResponse.containmentEntity) &&
        Objects.equals(this.description, moduleResultResponse.description) &&
        Objects.equals(this.entityPhysicalIndex, moduleResultResponse.entityPhysicalIndex) &&
        Objects.equals(this.id, moduleResultResponse.id) &&
        Objects.equals(this.isFieldReplaceable, moduleResultResponse.isFieldReplaceable) &&
        Objects.equals(this.isReportingAlarmsAllowed, moduleResultResponse.isReportingAlarmsAllowed) &&
        Objects.equals(this.manufacturer, moduleResultResponse.manufacturer) &&
        Objects.equals(this.moduleIndex, moduleResultResponse.moduleIndex) &&
        Objects.equals(this.name, moduleResultResponse.name) &&
        Objects.equals(this.operationalStateCode, moduleResultResponse.operationalStateCode) &&
        Objects.equals(this.partNumber, moduleResultResponse.partNumber) &&
        Objects.equals(this.serialNumber, moduleResultResponse.serialNumber) &&
        Objects.equals(this.vendorEquipmentType, moduleResultResponse.vendorEquipmentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assemblyNumber, assemblyRevision, attributeInfo, containmentEntity, description, entityPhysicalIndex, id, isFieldReplaceable, isReportingAlarmsAllowed, manufacturer, moduleIndex, name, operationalStateCode, partNumber, serialNumber, vendorEquipmentType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleResultResponse {\n");
    
    sb.append("    assemblyNumber: ").append(toIndentedString(assemblyNumber)).append("\n");
    sb.append("    assemblyRevision: ").append(toIndentedString(assemblyRevision)).append("\n");
    sb.append("    attributeInfo: ").append(toIndentedString(attributeInfo)).append("\n");
    sb.append("    containmentEntity: ").append(toIndentedString(containmentEntity)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityPhysicalIndex: ").append(toIndentedString(entityPhysicalIndex)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isFieldReplaceable: ").append(toIndentedString(isFieldReplaceable)).append("\n");
    sb.append("    isReportingAlarmsAllowed: ").append(toIndentedString(isReportingAlarmsAllowed)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    moduleIndex: ").append(toIndentedString(moduleIndex)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operationalStateCode: ").append(toIndentedString(operationalStateCode)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    vendorEquipmentType: ").append(toIndentedString(vendorEquipmentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

