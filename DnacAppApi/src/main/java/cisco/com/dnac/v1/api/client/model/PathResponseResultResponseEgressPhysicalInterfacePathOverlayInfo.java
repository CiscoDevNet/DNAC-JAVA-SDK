/*
 * Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cisco.com.dnac.v1.api.client.model;

import java.util.Objects;
import cisco.com.dnac.v1.api.client.model.PathResponseResultResponseEgressPhysicalInterfaceVxlanInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-06T09:46:49.053-05:00")
public class PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo {
  @SerializedName("controlPlane")
  private String controlPlane = null;

  @SerializedName("dataPacketEncapsulation")
  private String dataPacketEncapsulation = null;

  @SerializedName("destIp")
  private String destIp = null;

  @SerializedName("destPort")
  private String destPort = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("sourceIp")
  private String sourceIp = null;

  @SerializedName("sourcePort")
  private String sourcePort = null;

  @SerializedName("vxlanInfo")
  private PathResponseResultResponseEgressPhysicalInterfaceVxlanInfo vxlanInfo = null;

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo controlPlane(String controlPlane) {
    this.controlPlane = controlPlane;
    return this;
  }

   /**
   * Get controlPlane
   * @return controlPlane
  **/
  @ApiModelProperty(value = "")
  public String getControlPlane() {
    return controlPlane;
  }

  public void setControlPlane(String controlPlane) {
    this.controlPlane = controlPlane;
  }

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo dataPacketEncapsulation(String dataPacketEncapsulation) {
    this.dataPacketEncapsulation = dataPacketEncapsulation;
    return this;
  }

   /**
   * Get dataPacketEncapsulation
   * @return dataPacketEncapsulation
  **/
  @ApiModelProperty(value = "")
  public String getDataPacketEncapsulation() {
    return dataPacketEncapsulation;
  }

  public void setDataPacketEncapsulation(String dataPacketEncapsulation) {
    this.dataPacketEncapsulation = dataPacketEncapsulation;
  }

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo destIp(String destIp) {
    this.destIp = destIp;
    return this;
  }

   /**
   * Get destIp
   * @return destIp
  **/
  @ApiModelProperty(value = "")
  public String getDestIp() {
    return destIp;
  }

  public void setDestIp(String destIp) {
    this.destIp = destIp;
  }

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo destPort(String destPort) {
    this.destPort = destPort;
    return this;
  }

   /**
   * Get destPort
   * @return destPort
  **/
  @ApiModelProperty(value = "")
  public String getDestPort() {
    return destPort;
  }

  public void setDestPort(String destPort) {
    this.destPort = destPort;
  }

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @ApiModelProperty(value = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo sourceIp(String sourceIp) {
    this.sourceIp = sourceIp;
    return this;
  }

   /**
   * Get sourceIp
   * @return sourceIp
  **/
  @ApiModelProperty(value = "")
  public String getSourceIp() {
    return sourceIp;
  }

  public void setSourceIp(String sourceIp) {
    this.sourceIp = sourceIp;
  }

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo sourcePort(String sourcePort) {
    this.sourcePort = sourcePort;
    return this;
  }

   /**
   * Get sourcePort
   * @return sourcePort
  **/
  @ApiModelProperty(value = "")
  public String getSourcePort() {
    return sourcePort;
  }

  public void setSourcePort(String sourcePort) {
    this.sourcePort = sourcePort;
  }

  public PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo vxlanInfo(PathResponseResultResponseEgressPhysicalInterfaceVxlanInfo vxlanInfo) {
    this.vxlanInfo = vxlanInfo;
    return this;
  }

   /**
   * Get vxlanInfo
   * @return vxlanInfo
  **/
  @ApiModelProperty(value = "")
  public PathResponseResultResponseEgressPhysicalInterfaceVxlanInfo getVxlanInfo() {
    return vxlanInfo;
  }

  public void setVxlanInfo(PathResponseResultResponseEgressPhysicalInterfaceVxlanInfo vxlanInfo) {
    this.vxlanInfo = vxlanInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo = (PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo) o;
    return Objects.equals(this.controlPlane, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.controlPlane) &&
        Objects.equals(this.dataPacketEncapsulation, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.dataPacketEncapsulation) &&
        Objects.equals(this.destIp, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.destIp) &&
        Objects.equals(this.destPort, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.destPort) &&
        Objects.equals(this.protocol, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.protocol) &&
        Objects.equals(this.sourceIp, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.sourceIp) &&
        Objects.equals(this.sourcePort, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.sourcePort) &&
        Objects.equals(this.vxlanInfo, pathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo.vxlanInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(controlPlane, dataPacketEncapsulation, destIp, destPort, protocol, sourceIp, sourcePort, vxlanInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PathResponseResultResponseEgressPhysicalInterfacePathOverlayInfo {\n");
    
    sb.append("    controlPlane: ").append(toIndentedString(controlPlane)).append("\n");
    sb.append("    dataPacketEncapsulation: ").append(toIndentedString(dataPacketEncapsulation)).append("\n");
    sb.append("    destIp: ").append(toIndentedString(destIp)).append("\n");
    sb.append("    destPort: ").append(toIndentedString(destPort)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    sourceIp: ").append(toIndentedString(sourceIp)).append("\n");
    sb.append("    sourcePort: ").append(toIndentedString(sourcePort)).append("\n");
    sb.append("    vxlanInfo: ").append(toIndentedString(vxlanInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

